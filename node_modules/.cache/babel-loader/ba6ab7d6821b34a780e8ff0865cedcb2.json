{"ast":null,"code":"import _slicedToArray from\"/home/ruben/repos/projects/Curriculum-Vitae/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import menuList from'../../utils/header/menuList';import{jsx as _jsx}from\"react/jsx-runtime\";function ModalNavbar(){// Set up a state to toggle the modal navbar\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),showModal=_useState2[0],setShowModal=_useState2[1];// Create an event on the window to trigger the offset check\nuseEffect(function(){// Toggle the modal navbar when the window has been offset to at least 200px\nvar handleModal=function handleModal(){if(window.scrollY>200){setShowModal(true);}else{setShowModal(false);}};window.addEventListener('scroll',handleModal);return function(){window.removeEventListener('scroll',handleModal);};});// See the map explanation in the navbar.js file\nvar modalMenu=menuList.map(function(item){return/*#__PURE__*/_jsx(\"a\",{href:item.linkUrl,className:\"modal-menu-link\",children:/*#__PURE__*/_jsx(\"li\",{className:\"modal-menu-item\",children:/*#__PURE__*/_jsx(\"p\",{className:\"modal-menu-title\",children:item.title})})},item.index);});return/*#__PURE__*/ (// When the offset condition is true, change the modal navbar css style to display it\n_jsx(\"nav\",{className:showModal?'navbar-visible':'navbar-hidden',children:/*#__PURE__*/_jsx(\"ul\",{className:\"modal-menu-list\",children:modalMenu})}));}export default ModalNavbar;","map":{"version":3,"names":["React","useState","useEffect","menuList","ModalNavbar","showModal","setShowModal","handleModal","window","scrollY","addEventListener","removeEventListener","modalMenu","map","item","linkUrl","title","index"],"sources":["/home/ruben/repos/projects/Curriculum-Vitae/src/components/window/ModalNavbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport menuList from '../../utils/header/menuList';\n\nfunction ModalNavbar() {\n  // Set up a state to toggle the modal navbar\n  const [showModal, setShowModal] = useState(false);\n\n  \n  // Create an event on the window to trigger the offset check\n  useEffect(() => {\n    // Toggle the modal navbar when the window has been offset to at least 200px\n    const handleModal = () => {\n      if (window.scrollY > 200) {\n        setShowModal(true);\n      } else {\n        setShowModal(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleModal);\n    return () => {\n      window.removeEventListener('scroll', handleModal);\n    };\n  });\n\n  // See the map explanation in the navbar.js file\n  const modalMenu = menuList.map((item) => (\n    <a key={item.index} href={item.linkUrl} className=\"modal-menu-link\">\n      <li className=\"modal-menu-item\">\n        <p className=\"modal-menu-title\">{item.title}</p>\n      </li>\n\n    </a>\n  ));\n\n  return (\n    // When the offset condition is true, change the modal navbar css style to display it\n    <nav className={showModal ? 'navbar-visible' : 'navbar-hidden'}>\n      <ul className=\"modal-menu-list\">\n        {modalMenu}\n      </ul>\n    </nav>\n  );\n}\n\nexport default ModalNavbar;\n"],"mappings":"iIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,QAAP,KAAqB,6BAArB,C,2CAEA,QAASC,CAAAA,WAAT,EAAuB,CACrB;AACA,cAAkCH,QAAQ,CAAC,KAAD,CAA1C,wCAAOI,SAAP,eAAkBC,YAAlB,eAGA;AACAJ,SAAS,CAAC,UAAM,CACd;AACA,GAAMK,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAIC,MAAM,CAACC,OAAP,CAAiB,GAArB,CAA0B,CACxBH,YAAY,CAAC,IAAD,CAAZ,CACD,CAFD,IAEO,CACLA,YAAY,CAAC,KAAD,CAAZ,CACD,CACF,CAND,CAQAE,MAAM,CAACE,gBAAP,CAAwB,QAAxB,CAAkCH,WAAlC,EACA,MAAO,WAAM,CACXC,MAAM,CAACG,mBAAP,CAA2B,QAA3B,CAAqCJ,WAArC,EACD,CAFD,CAGD,CAdQ,CAAT,CAgBA;AACA,GAAMK,CAAAA,SAAS,CAAGT,QAAQ,CAACU,GAAT,CAAa,SAACC,IAAD,qBAC7B,UAAoB,IAAI,CAAEA,IAAI,CAACC,OAA/B,CAAwC,SAAS,CAAC,iBAAlD,uBACE,WAAI,SAAS,CAAC,iBAAd,uBACE,UAAG,SAAS,CAAC,kBAAb,UAAiCD,IAAI,CAACE,KAAtC,EADF,EADF,EAAQF,IAAI,CAACG,KAAb,CAD6B,EAAb,CAAlB,CASA,oBACE;AACA,YAAK,SAAS,CAAEZ,SAAS,CAAG,gBAAH,CAAsB,eAA/C,uBACE,WAAI,SAAS,CAAC,iBAAd,UACGO,SADH,EADF,EAFF,EAQD,CAED,cAAeR,CAAAA,WAAf"},"metadata":{},"sourceType":"module"}